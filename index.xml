<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Rios</title>
    <link>https://alexrios.dev/</link>
    <description>Recent content on Alex Rios</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 24 Feb 2020 11:24:48 -0300</lastBuildDate>
    
	<atom:link href="https://alexrios.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>O que é um Tech Leader em 2020?</title>
      <link>https://alexrios.dev/posts/2020/tech-leader-2020/</link>
      <pubDate>Mon, 24 Feb 2020 11:24:48 -0300</pubDate>
      
      <guid>https://alexrios.dev/posts/2020/tech-leader-2020/</guid>
      <description>O que tem ocorrido muito no cenário das empresas de tecnologia é querer contratar apenas desenvolvedores sêniors.
Principalmente por estar contratando um conjunto de habilidades e experiências, acredita-se que essas pessoas já serão operacionais desde o dia 1 na empresa, economizando o famoso tempo de Ramp-Up.
 Ramp-up — etapa que define o ínicio da produção de uma indústria, com o objetivo de comercializar um produto novo
 Com isso, desenvolvedores com pouca ou nenhuma experiência ficam jogados de lado na atual guerra das contratações.</description>
    </item>
    
    <item>
      <title>How to use your private Go lib in Github Actions</title>
      <link>https://alexrios.dev/posts/2020/private-go-lib-github-actions/</link>
      <pubDate>Thu, 30 Jan 2020 12:27:07 -0300</pubDate>
      
      <guid>https://alexrios.dev/posts/2020/private-go-lib-github-actions/</guid>
      <description>In this tutorial I&amp;rsquo;ll use the fictional private repository called github.com/alexrios/superlib at the version v1.1.0
Backing story During the Continuous integration pipeline executing go mod tidy I was getting this error:
go: github.com/alexrios/superlib@v1.1.0: reading github.com/alexrios/superlib/go.mod at revision v1.1.0: unknown revision v1.1.0 Why? In order to understand how Go uses a VCS to handle dependencies I recommend this Go team blog post: https://blog.golang.org/publishing-go-modules
Solution Generate a token with read permission on org or user repositories and setup a substitution in git global configurations.</description>
    </item>
    
    <item>
      <title>Using private Golang libs</title>
      <link>https://alexrios.dev/posts/2019/using-private-go-libs/</link>
      <pubDate>Sun, 29 Dec 2019 14:15:37 -0300</pubDate>
      
      <guid>https://alexrios.dev/posts/2019/using-private-go-libs/</guid>
      <description>1 - Configure GIT (~/.gitconfig)
[url &amp;quot;ssh://git@github.com/&amp;quot;] insteadOf = https://github.com/ 2 - Add the private repository location in GOPRIVATE env var
go env -w GOPRIVATE=&amp;quot;github.com/&amp;lt;org&amp;gt;/&amp;lt;project&amp;gt;&amp;quot; </description>
    </item>
    
    <item>
      <title>A normalização do desenvolvimento medíocre de software</title>
      <link>https://alexrios.dev/posts/2019/normalizacao-mediocridade/</link>
      <pubDate>Thu, 08 Aug 2019 12:27:07 -0300</pubDate>
      
      <guid>https://alexrios.dev/posts/2019/normalizacao-mediocridade/</guid>
      <description>Há 19 anos a Microsoft já sabia como fazer interfaces melhores do que 90% dos sistemas que são criados hoje em dia.
Inductive User Interface é relevante ate hoje, mas continua não sendo adotada pela desculpa mais comum entre empresas e profissionais da área de tecnologia: falta de tempo.
Isso me faz pensar que uma coisa vai levando a outra; Modelagem anêmica e o pensamento que tudo seria um grande CRUD.</description>
    </item>
    
    <item>
      <title>Tem certeza de que seu time pode usar micro serviços?</title>
      <link>https://alexrios.dev/posts/2019/sua-equipe-nao-pode-usar-microservicos/</link>
      <pubDate>Thu, 30 May 2019 12:27:07 -0300</pubDate>
      
      <guid>https://alexrios.dev/posts/2019/sua-equipe-nao-pode-usar-microservicos/</guid>
      <description>A maioria das empresas está mirando chegar no topo do nirvana arquitetural utilizando-se de tecnologias de ponta. Infelizmente, o que observo são movimentos desesperados de executar o que se lê em artigos de fonte, no mínimo, duvidosa. Isso quando a intenção não é simplesmente um desejo irresponsável de um grupo de desenvolvedores de mostrar (no LinkedIn? para amigos? para uma talk na conferência da esquina?) que consegue.
Vamos imaginar que você tenha autonomia para adotar uma arquitetura de micro serviços em sua empresa.</description>
    </item>
    
  </channel>
</rss>