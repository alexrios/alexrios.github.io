[
    {
        "ref": "https://alexrios.dev/posts/2020/private-go-lib-github-actions/",
        "title": "How to use your private Go lib in Github Actions",
        "section": "posts",
        "tags": ["go","private lib","github actions","git"],
        "date" : "2020.01.30",
        "body": "In this tutorial I\u0026rsquo;ll use the fictional private repository called github.com/alexrios/superlib at the version v1.1.0\nBacking story During the Continuous integration pipeline executing go mod tidy I was getting this error:\ngo: github.com/alexrios/superlib@v1.1.0: reading github.com/alexrios/superlib/go.mod at revision v1.1.0: unknown revision v1.1.0 Why? In order to understand how Go uses a VCS to handle dependencies I recommend this Go team blog post: https://blog.golang.org/publishing-go-modules\nSolution Generate a token with read permission on org or user repositories and setup a substitution in git global configurations.\nThat way the authenticated form will always be used.\nI highly recommend you to use the repository secrets to avoid exposing sensible data, in this case, the token.\n- name: Granting private modules access run: | git config --global url.\u0026#34;https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/alexrios\u0026#34;.insteadOf \u0026#34;https://github.com/alexrios\u0026#34;  more on declaring and using secrets: https://help.github.com/pt/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets\n"
    }
]
